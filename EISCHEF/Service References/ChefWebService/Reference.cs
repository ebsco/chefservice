//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleApplication1.ChefWebService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProcessOutput", Namespace="http://schemas.datacontract.org/2004/07/ChefService.WebService")]
    [System.SerializableAttribute()]
    public partial class ProcessOutput : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] LinesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Lines {
            get {
                return this.LinesField;
            }
            set {
                if ((object.ReferenceEquals(this.LinesField, value) != true)) {
                    this.LinesField = value;
                    this.RaisePropertyChanged("Lines");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ChefWebService.IChefWebService")]
    public interface IChefWebService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChefWebService/StartChef", ReplyAction="http://tempuri.org/IChefWebService/StartChefResponse")]
        void StartChef(string ChefArgs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChefWebService/GetExitCode", ReplyAction="http://tempuri.org/IChefWebService/GetExitCodeResponse")]
        int GetExitCode();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChefWebService/GetProcessOutput", ReplyAction="http://tempuri.org/IChefWebService/GetProcessOutputResponse")]
        ConsoleApplication1.ChefWebService.ProcessOutput GetProcessOutput();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChefWebService/HasExited", ReplyAction="http://tempuri.org/IChefWebService/HasExitedResponse")]
        bool HasExited();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChefWebServiceChannel : ConsoleApplication1.ChefWebService.IChefWebService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChefWebServiceClient : System.ServiceModel.ClientBase<ConsoleApplication1.ChefWebService.IChefWebService>, ConsoleApplication1.ChefWebService.IChefWebService {
        
        public ChefWebServiceClient() {
        }
        
        public ChefWebServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ChefWebServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ChefWebServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ChefWebServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void StartChef(string ChefArgs) {
            base.Channel.StartChef(ChefArgs);
        }
        
        public int GetExitCode() {
            return base.Channel.GetExitCode();
        }
        
        public ConsoleApplication1.ChefWebService.ProcessOutput GetProcessOutput() {
            return base.Channel.GetProcessOutput();
        }
        
        public bool HasExited() {
            return base.Channel.HasExited();
        }
    }
}
